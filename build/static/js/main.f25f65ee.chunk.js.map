{"version":3,"sources":["ApiContext.js","Composition/FolderItem/FolderItem.js","Composition/AddFolderButton/AddFolderButton.js","Composition/HomeSideBar/HomeSideBar.js","config.js","Composition/DeleteButton/DeleteButton.js","Composition/NoteItem/NoteItem.js","Composition/AddNoteButton/AddNoteButton.js","Composition/HomeMain/HomeMain.js","Error.js","Composition/HomePage/HomePage.js","Composition/Header/Header.js","Composition/FolderMain/FolderMain.js","Composition/FolderPage/FolderPage.js","Composition/BackButton/BackButton.js","Composition/NoteSideBar/NoteSideBar.js","Composition/NotePageItem/NotePageItem.js","Composition/NoteMain/NoteMain.js","Composition/NotePage/NotePage.js","Composition/AddFolder/ValidationError.js","Composition/AddFolder/AddFolder.js","Composition/AddNote/ValidationError.js","Composition/AddNote/AddNote.js","App.js","index.js"],"names":["React","createContext","notes","folders","addFolder","addNote","deleteNote","setNote","setFolder","currentNote","currentFolder","fetchData","FolderItem","checkFolder","context","className","props","folder","name","id","to","this","onClick","Component","contextType","ApiContext","AddFolderButton","HomeSideBar","map","index","key","DeleteButton","Consumer","noteId","callback","fetch","config","method","headers","then","res","ok","json","error","data","catch","console","NoteItem","modified","date","note","Date","toDateString","AddNoteButton","HomeMain","Error","state","hasError","children","HomePage","Header","FolderMain","folderid","FolderPage","length","nextprops","log","match","find","f","params","folderId","BackButton","NoteSideBar","folderName","item","NotePageItem","NoteMain","content","NotePage","n","ValidationError","message","AddFolder","value","touched","setState","validateFolderName","disabled","type","addFolderRequest","body","JSON","stringify","htmlFor","onChange","e","updateFolderName","target","makeSubmitButton","AddNote","noteName","preventDefault","validateNoteName","validateFolder","validateContent","addNoteRequest","onSubmit","handleSubmit","updateNoteName","updateFolder","options","selectedIndex","updateContent","App","folderForm","newNotes","filter","setFolderForm","push","Promise","all","notesRes","foldersRes","reject","Provider","exact","path","render","ReactDOM","document","getElementById"],"mappings":"wkBAEeA,G,kBAAAA,IAAMC,cAAc,CACjCC,MAAO,GACPC,QAAS,GACTC,UAAW,aACXC,QAAS,aACTC,WAAY,aACZC,QAAS,aACTC,UAAW,aACXC,YAAa,KACbC,cAAe,KACfC,UAAW,gBCNPC,E,4MAGEC,YAAY,WAER,OAAgC,OAA7B,EAAKC,QAAQJ,cACL,wBAAIK,UAAU,gBACpB,EAAKC,MAAMC,OAAOC,MAGe,OAA9B,EAAKJ,QAAQJ,cACd,EAAKI,QAAQJ,cAAcS,KAAO,EAAKH,MAAMC,OAAOE,GAC5C,wBAAIJ,UAAU,8BACpB,EAAKC,MAAMC,OAAOC,MAKhB,wBAAIH,UAAU,gBACpB,EAAKC,MAAMC,OAAOC,WATlB,G,uDAkBJ,IAAD,OAEJ,OACI,kBAAC,IAAD,CAAMH,UAAU,mBAAmBK,GAAE,kBAAaC,KAAKL,MAAMC,OAAOE,IAAMG,QAAS,WAAK,EAAKR,QAAQN,UAAU,EAAKQ,MAAMC,UACrHI,KAAKR,mB,GAhCGU,aAAnBX,EACKY,YAAcC,EA2CVb,QCpCAc,G,6KANP,OACI,kBAAC,IAAD,CAAMN,GAAE,aAAgBL,UAAU,mBAAlC,kB,GAJkBQ,cCCxBI,E,uKAGE,OACI,yBAAKZ,UAAU,WACX,wBAAIA,UAAU,yBACTM,KAAKP,QAAQX,QACTyB,KAAI,SAACX,EAAOY,GACT,OACI,kBAAC,EAAD,CAAYZ,OAAQA,EAAQa,IAAKD,QAIjD,kBAAC,EAAD,W,GAbUN,aAApBI,EACKH,YAAcC,EAkBVE,QCzBA,EACG,+CCOZI,G,6KAGO,IAAD,OAyBJ,OACI,kBAACN,EAAWO,SAAZ,MACK,SAAClB,GAAD,OACG,kBAAC,IAAD,CAAMM,GAAG,KAAI,4BAAQL,UAAU,eAAeO,QAAS,WA1BnE,IAA2BW,EAAQC,EAARD,EA0B+D,EAAKjB,MAAMiB,OA1BlEC,EA0B0EpB,EAAQR,WAzBjH6B,MAAM,GAAD,OAAIC,EAAJ,kBAAiCH,GAAS,CAC3CI,OAAQ,SACRC,QAAS,CACL,eAAe,sBAGtBC,MAAK,SAAAC,GACF,OAAIA,EAAIC,GAKDD,EAJIA,EAAIE,OAAOH,MAAK,SAAAI,GACnB,MAAMA,QAKjBJ,MAAK,SAAAK,GACFV,EAASD,MAEZY,OAAM,SAAAF,GACHG,QAAQH,MAAMA,QAOG,uB,GA/BNpB,cAArBQ,EACKP,YAAcC,EAyCVM,QC3CTgB,G,6KAEO,IAAD,OAOJ,IANmBC,EAMfC,GANeD,EAMC3B,KAAKL,MAAMkC,KAAKF,SALxB,IAAIG,KAAKH,GACNI,gBAMf,OAAO,yBAAKrC,UAAU,YAClB,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAMA,UAAU,WAAWK,GAAE,gBAAWC,KAAKL,MAAMkC,KAAK/B,IAAMG,QAAS,WAAK,EAAKR,QAAQP,QAAQ,EAAKS,MAAMkC,QAAS7B,KAAKL,MAAMkC,KAAKhC,MACrI,uBAAGH,UAAU,QAAb,oBAAsCkC,EAAtC,MAEJ,kBAAC,EAAD,CAAchB,OAAUZ,KAAKL,MAAMkC,KAAK/B,U,GAhB7BI,cAAjBwB,EACKvB,YAAcC,EA0BVsB,QCrBAM,G,6KANP,OACI,kBAAC,IAAD,CAAMjC,GAAE,WAAcL,UAAU,eAAc,4BAAQA,UAAU,iBAAlB,iB,GAJ9BQ,cCGtB+B,G,6KAGE,OAAO,yBAAKvC,UAAU,QACjBM,KAAKP,QAAQZ,MACT0B,KAAI,SAACsB,EAAKrB,GACP,OAAO,kBAAC,EAAD,CAAUqB,KAAMA,EAAMpB,IAAKD,OAE1C,kBAAC,EAAD,W,GARWN,cAAjB+B,EACK9B,YAAcC,EAaV6B,QCIAC,E,kDAtBX,WAAYvC,GAAQ,IAAD,8BACf,cAAMA,IACDwC,MAAQ,CACXC,UAAU,GAHG,E,qDAYf,OAAGpC,KAAKmC,MAAMC,SAER,qFAGDpC,KAAKL,MAAM0C,Y,gDAVcf,GAC9B,MAAO,CAAEc,UAAU,O,GATPlC,aCiBLoC,E,uKAVP,OAAO,kBAAC,EAAD,KACP,yBAAK5C,UAAU,6BACP,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GALOQ,aCFjBqC,G,6KAIO,IAAD,OACJ,OACI,kBAACnC,EAAWO,SAAZ,MACC,SAAClB,GAAD,OACW,gCACA,8BACA,kBAAC,IAAD,CAAMM,GAAG,IAAIE,QAAS,WAAK,EAAKR,QAAQN,UAAU,QAAlD,mB,GAVHe,cAAfqC,EAEKpC,YAAcC,EAmBVmC,QCpBTC,G,6KAEO,IAAD,OACJ,OAAO,yBAAK9C,UAAU,cACjBM,KAAKP,QAAQZ,MACT0B,KAAI,SAACsB,EAAKrB,GACP,GAAI,EAAKf,QAAQJ,cAAcS,KAAK+B,EAAKY,SACrC,OAAO,kBAAC,EAAD,CAAUZ,KAAMA,EAAMpB,IAAKD,OAI9C,kBAAC,EAAD,W,GAXaN,cAAnBsC,EACKrC,YAAcC,EAgBVoC,QCjBTE,E,kLAKU1C,KAAKP,QAAQZ,MAAM8D,QAAW3C,KAAKP,QAAQX,QAAQ6D,QAAW3C,KAAKP,QAAQJ,eAC3EW,KAAKP,QAAQH,c,0CAIDsD,GAEhB,GADDnB,QAAQoB,IAAID,IACP5C,KAAKP,QAAQJ,cAAc,CAAC,IAEbyD,EAAUF,EAAlBjD,MAAQmD,MACTlD,EAASI,KAAKP,QAAQX,QAAQiE,MAAK,SAAAC,GAAC,OAC1CA,EAAElD,KAAOgD,EAAMG,OAAOC,YAE1BlD,KAAKP,QAAQN,UAAUS,M,+BAO3B,OAAII,KAAKP,QAAQX,QAAQ6D,QAAW3C,KAAKP,QAAQZ,MAAM8D,QAAW3C,KAAKP,QAAQJ,cAIxE,kBAAC,EAAD,KACH,yBAAKK,UAAU,+BACX,kBAAC,EAAD,MACA,kBAAC,EAAD,QANG,S,GA1BMQ,aAAnBwC,EACKvC,YAAcC,EAsCVsC,QCxCTS,G,mLAKE,OACI,kBAAC/C,EAAWO,SAAZ,MACK,SAAClB,GAAD,OACD,kBAAC,IAAD,CAAMM,GAAG,IAAIL,UAAU,cAAvB,kB,GARSQ,cAAnBiD,EACKhD,YAAcC,EAcV+C,QCfTC,E,uKAEO,IAAD,OAMAC,EAJSrD,KAAKP,QAAQX,QAAQiE,MAAK,SAACO,GACpC,OAAOA,EAAKxD,KAAK,EAAKL,QAAQL,YAAYqD,YAGtB5C,KAGxB,OAAO,yBAAKH,UAAU,uBAClB,kBAAC,EAAD,MACA,2BAAI2D,Q,GAbUnD,aAApBkD,EACKjD,YAAcC,EAkBVgD,QCnBTG,E,uKAUE,IANmB5B,EAMfC,GANeD,EAMC3B,KAAKP,QAAQL,YAAYuC,SALjC,IAAIG,KAAKH,GACNI,gBAMf,OACA,yBAAKrC,UAAU,YACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,YAAYM,KAAKP,QAAQL,YAAYS,MAClD,uBAAGH,UAAU,QAAb,oBAAsCkC,EAAtC,MAEJ,kBAAC,EAAD,CAAchB,OAAUZ,KAAKP,QAAQL,YAAYU,U,GAlBlCI,aAArBqD,EACKpD,YAAcC,EAsBVmD,QCvBTC,G,6KAKE,OAAO,yBAAK9D,UAAU,QAClB,kBAAC,EAAD,MACA,uBAAGA,UAAU,WAAWM,KAAKP,QAAQL,YAAYqE,c,GAPtCvD,cAAjBsD,EACKrD,YAAcC,EAYVoD,QCXTE,E,kLAKM1D,KAAKP,QAAQZ,MAAM8D,QAAW3C,KAAKP,QAAQX,QAAQ6D,QAAW3C,KAAKP,QAAQL,aAC3EY,KAAKP,QAAQH,c,0CAIDsD,GAGhB,IAAI5C,KAAKP,QAAQL,YAAY,CAAC,IACX0D,EAAUF,EAAlBjD,MAAQmD,MACTjB,EAAO7B,KAAKP,QAAQZ,MAAMkE,MAAK,SAAAY,GAAC,OAClCA,EAAE7D,KAAOgD,EAAMG,OAAOrC,UAE1BZ,KAAKP,QAAQP,QAAQ2C,M,+BAQzB,OAAI7B,KAAKP,QAAQZ,MAAM8D,QAAW3C,KAAKP,QAAQX,QAAQ6D,QAAW3C,KAAKP,QAAQL,YAIxE,kBAAC,EAAD,KACP,yBAAKM,UAAU,oBACZ,kBAAC,EAAD,MACC,kBAAC,EAAD,QANO,S,GA3BIQ,aAAjBwD,EACKvD,YAAcC,EAuCVsD,Q,MC7CA,SAASE,EAAgBjE,GACtC,OAAGA,EAAMkE,QAEL,yBAAKnE,UAAU,SAASC,EAAMkE,SAI3B,qC,UCCHC,E,kDAUF,WAAYnE,GAAO,IAAD,8BACd,cAAMA,IACDwC,MAAM,CACPkB,WAAY,CACRU,MAAO,GACPC,SAAS,IALH,E,iEALd,GAAuB,IADJhE,KAAKmC,MAAMkB,WAAWU,MAC3BpB,OACV,MAAO,+B,sDAcEU,GACbrD,KAAKiE,SAAS,CAACZ,WAAY,CAACU,MAAMV,EAAWW,SAAQ,O,yCAGtC,IAAD,OACd,OAAGhE,KAAKkE,qBACG,kBAAC,IAAD,CAAMjE,QAAS,WAAK,EAAKR,QAAQN,UAAU,KAAMO,UAAU,iBAAiBK,GAAG,KAAI,4BAASoE,SAAUnE,KAAKkE,qBAAsBxE,UAAU,sBAAsB0E,KAAK,SAASnE,QAAS,kBAAI,EAAKoE,iBAAiB,EAAKlC,MAAMkB,WAAWU,MAAO,EAAKtE,QAAQV,aAAzK,WAGnF,kBAAC,IAAD,CAAMkB,QAAS,WAAK,EAAKR,QAAQN,UAAU,KAAMO,UAAU,iBAAiBK,GAAG,KAAI,4BAAQL,UAAU,yBAAyB0E,KAAK,SAASnE,QAAS,kBAAI,EAAKoE,iBAAiB,EAAKlC,MAAMkB,WAAWU,MAAO,EAAKtE,QAAQV,aAAtI,a,uCAIjFsE,EAAYxC,GACzBC,MAAM,GAAD,OAAIC,EAAJ,YAAkC,CACnCC,OAAQ,OACRC,QAAS,CACL,eAAe,oBAEnBqD,KAAMC,KAAKC,UAAU,CAAC,KAAOnB,MAEhCnC,MAAK,SAAAC,GACF,OAAIA,EAAIC,GAKDD,EAAIE,OAJAF,EAAIE,OAAOH,MAAK,SAAAI,GACnB,MAAMA,QAKjBJ,MAAK,SAAAK,GACFV,EAASU,MAGZC,OAAM,SAAAF,GACHG,QAAQH,MAAMA,Q,+BAKb,IAAD,OAEJ,OACI,kBAAClB,EAAWO,SAAZ,MACK,SAAClB,GAAD,OAAY,kBAAC,EAAD,KACb,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,QACX,0BAAMA,UAAU,aACZ,uBAAGA,UAAU,aAAb,uBACA,yBAAKA,UAAU,cACX,2BAAO+E,QAAQ,cAAf,gBACA,2BAAOL,KAAK,OAAOvE,KAAK,aAAaC,GAAG,aAAa4E,SAAU,SAAAC,GAAC,OAAE,EAAKC,iBAAiBD,EAAEE,OAAOd,UAChG,EAAK5B,MAAMkB,WAAWW,SAAY,kBAACJ,EAAD,CAAiBC,QAAS,EAAKK,wBAErE,EAAKY,8B,GA5EV5E,aAAlB4D,EACK3D,YAAcC,EAwFV0D,QCjGA,SAASF,EAAgBjE,GACtC,OAAGA,EAAMkE,QAEL,yBAAKnE,UAAU,SAASC,EAAMkE,SAI3B,qC,UCCHkB,E,kDAkDF,WAAYpF,GAAO,IAAD,8BACd,cAAMA,IACDwC,MAAM,CACP6C,SAAU,CACNjB,MAAO,GACPC,SAAS,GAEbpE,OAAQ,CACJmE,MAAO,GACPC,SAAQ,GAEZP,QAAS,CACLM,MAAO,GACPC,SAAQ,GAEZpC,KAAM,IAfI,E,yDA/CL+C,GACTA,EAAEM,mB,iCAMF,OAFQ,IAAInD,MACDC,iB,gCAKXN,QAAQoB,IAAI,U,yCAKZ,GAAiB,IADJ7C,KAAKmC,MAAM6C,SAASjB,MACzBpB,OACJ,MAAO,2B,qCAIAqC,GACXhF,KAAKiE,SAAS,CAACe,SAAU,CAACjB,MAAMiB,EAAShB,SAAQ,O,uCAKjD,GAAY,KADGhE,KAAKmC,MAAMvC,OAAOmE,MAE7B,MAAO,kC,mCAIFV,GACTrD,KAAKiE,SAAS,CAACrE,OAAQ,CAACmE,MAAMV,EAAWW,SAAQ,O,wCAKjD,GAAoB,IADJhE,KAAKmC,MAAMsB,QAAQM,MACxBpB,OACP,MAAO,yB,oCAIDc,GACVzD,KAAKiE,SAAS,CAACR,QAAS,CAACM,MAAMN,EAAQO,SAAQ,S,wDAuBhC,IAAD,OACd,OAAGhE,KAAKkF,oBAAsBlF,KAAKmF,kBAAoBnF,KAAKoF,kBACjD,kBAAC,IAAD,CAAMnF,QAAS,WAAK,EAAKR,QAAQN,UAAU,KAAMO,UAAU,iBAAiBK,GAAG,KAClF,4BAAQqE,KAAK,SACT1E,UAAU,sBACVyE,SAAUnE,KAAKkF,oBAAsBlF,KAAKmF,kBAAoBnF,KAAKoF,kBACnEnF,QAAS,kBAAI,EAAKoF,eAAe,EAAKlD,MAAM6C,SAASjB,MAAM,EAAK5B,MAAMvC,OAAOmE,MAAM,EAAK5B,MAAMsB,QAAQM,MAAM,EAAKtE,QAAQT,WAH7H,WAUG,kBAAC,IAAD,CAAMiB,QAAS,WAAK,EAAKR,QAAQN,UAAU,KAAMO,UAAU,iBAAiBK,GAAG,KAAI,4BAAQqE,KAAK,SAAS1E,UAAU,yBAAyBO,QAAS,kBAAI,EAAKoF,eAAe,EAAKlD,MAAM6C,SAASjB,MAAM,EAAK5B,MAAMvC,OAAOmE,MAAM,EAAK5B,MAAMsB,QAAQM,MAAM,EAAKtE,QAAQT,WAAlL,a,qCAO/EgG,EAAS9B,EAASO,EAAQ5C,GAQzC,IAAIe,GALQ,IAAIE,MACDC,eAOfjB,MAAM,GAAD,OAAIC,EAAJ,UAAgC,CACjCC,OAAQ,OACRC,QAAS,CACL,eAAe,oBAEnBqD,KAAMC,KAAKC,UAAU,CAAC,KAAOQ,EAAS,SAAW9B,EAAS,QAAUO,EAAQ,SAAW7B,MAE1FV,MAAK,SAAAC,GACF,OAAIA,EAAIC,GAKDD,EAAIE,OAJAF,EAAIE,OAAOH,MAAK,SAAAI,GACnB,MAAMA,QAKjBJ,MAAK,SAAAK,GACFV,EAASU,MAEZC,OAAM,SAAAF,GACHG,QAAQH,MAAMA,Q,+BAKb,IAAD,OAEJ,OACI,kBAAClB,EAAWO,SAAZ,MACK,SAAClB,GAAD,OAAY,kBAAC,EAAD,KACT,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,QACX,0BAAMA,UAAU,WACZ,uBAAGA,UAAU,aAAb,qBACA,yBAAKA,UAAU,aAAa4F,SAAU,SAAAX,GAAC,OAAE,EAAKY,aAAaZ,KACvD,2BAAOF,QAAQ,YAAf,cACA,2BAAOL,KAAK,OAAOvE,KAAK,WAAWC,GAAG,WAAW4E,SAAU,SAAAC,GAAC,OAAE,EAAKa,eAAeb,EAAEE,OAAOd,UAC1F,EAAK5B,MAAM6C,SAAShB,SAAY,kBAAC,EAAD,CAAiBH,QAAS,EAAKqB,sBAEpE,yBAAKxF,UAAU,cACX,2BAAO+E,QAAQ,UAAf,WACA,4BAAQ5E,KAAK,SAASC,GAAG,SAAS4E,SAAU,SAAAC,GAAC,OAAE,EAAKc,aAAad,EAAEE,OAAOa,QAAQf,EAAEE,OAAOc,eAAe5B,SACtG,4BAAQA,MAAM,IAAd,mBACC,EAAKtE,QAAQX,QAAQyB,KAAI,SAACX,EAAOY,GAC9B,OAAO,4BAAQuD,MAAOnE,EAAOE,GAAIW,IAAKD,GAAQZ,EAAOC,UAG5D,EAAKsC,MAAMvC,OAAOoE,SAAY,kBAAC,EAAD,CAAiBH,QAAS,EAAKsB,oBAElE,yBAAKzF,UAAU,cACX,2BAAO+E,QAAQ,WAAf,YACA,2BAAOL,KAAK,OAAOvE,KAAK,UAAUC,GAAG,UAAU4E,SAAU,SAAAC,GAAC,OAAE,EAAKiB,cAAcjB,EAAEE,OAAOd,UACvF,EAAK5B,MAAMsB,QAAQO,SAAY,kBAAC,EAAD,CAAiBH,QAAS,EAAKuB,qBAElE,EAAKN,8B,GA7JhB5E,aAAhB6E,EACK5E,YAAcC,EAyKV2E,QC5BAc,E,4MAzIb1D,MAAQ,CACNtD,MAAM,GACNC,QAAQ,GACRM,YAAa,KACbC,cAAe,KACfyG,WAAY,CACV/B,MAAO,KACPC,SAAS,I,EAIb/E,WAAa,SAAC2B,GACZ,IAAMmF,EAAW,EAAK5D,MAAMtD,MAAMmH,QAAO,SAAAnE,GAAI,OAC3CA,EAAK/B,KAAOc,KAEd,EAAKqD,SAAS,CACZpF,MAAOkH,EACP1G,cAAe,Q,EAInBH,QAAU,SAAC2C,GACT,EAAKoC,SAAS,CACZ7E,YAAayC,K,EAKjB1C,UAAY,SAACS,GAEX,EAAKqE,SAAS,CACZ5E,cAAeO,K,EAKnBqG,cAAgB,SAAClC,GACf,EAAKE,SACH,CAAC6B,WACC,CAAC/B,MAAMA,EACPC,SAAQ,M,EAKdjF,UAAY,SAACwC,GACX,EAAKY,MAAMrD,QAAQoH,KAAK3E,GACxB,EAAKjC,a,EAGPN,QAAS,SAACuC,GACR,EAAKY,MAAMtD,MAAMqH,KAAK3E,GACtB,EAAKjC,a,EAIPA,UAAY,WACV6G,QAAQC,IAAI,CACVtF,MAAM,GAAD,OAAIC,EAAJ,WACLD,MAAM,GAAD,OAAIC,EAAJ,eAEJG,MAAK,YAA6B,IAAD,mBAA1BmF,EAA0B,KAAhBC,EAAgB,KAC9B,OAAKD,EAASjF,GAETkF,EAAWlF,GAGT+E,QAAQC,IAAI,CAACC,EAAShF,OAAQiF,EAAWjF,SAFrCiF,EAAWjF,OAAOH,MAAK,SAAAyD,GAAC,OAAIwB,QAAQI,OAAO5B,MAF3C0B,EAAShF,OAAOH,MAAK,SAAAyD,GAAC,OAAIwB,QAAQI,OAAO5B,SAMvDzD,MAAK,YAAuB,IAAD,mBAApBrC,EAAoB,KAAbC,EAAa,KACxB,EAAKmF,SAAS,CAACpF,QAAOC,eAEzB0C,OAAM,SAAAF,GACHG,QAAQH,MAAM,CAACA,c,kEAMrBtB,KAAKV,c,+BAKL,IAAMyE,EAAQ,CACZlF,MAAMmB,KAAKmC,MAAMtD,MACjBC,QAAQkB,KAAKmC,MAAMrD,QACnBM,YAAYY,KAAKmC,MAAM/C,YACvBC,cAAcW,KAAKmC,MAAM9C,cACzBH,QAASc,KAAKd,QACdC,UAAWa,KAAKb,UAChBG,UAAWU,KAAKV,UAChBL,WAAWe,KAAKf,WAChBF,UAAUiB,KAAKjB,UACfC,QAAQgB,KAAKhB,SAGf,OACC,kBAACoB,EAAWoG,SAAZ,CAAqBzC,MAAOA,GAEzB,0BAAMrE,UAAU,OAEhB,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,6BAEE,kBAAC,IAAD,CACE+G,OAAK,EAACC,KAAK,IACXC,OAAQ,SAAChH,GAAD,OAAS,kBAAC,EAAD,SAEnB,kBAAC,IAAD,CACE+G,KAAK,oBACLC,OAAQ,SAAChH,GAAD,OAAS,kBAAC,EAAD,CAAYA,MAAOA,OAEtC,kBAAC,IAAD,CACE+G,KAAK,gBACLC,OAAQ,SAAChH,GAAD,OAAS,kBAAC,EAAD,CAAUA,MAAOA,OAEpC,kBAAC,IAAD,CACE+G,KAAK,aACLC,OAAQ,SAAChH,GAAD,OAAS,kBAAC,EAAD,SAEnB,kBAAC,IAAD,CACE+G,KAAK,WACLC,OAAQ,SAAChH,GAAD,OAAS,kBAAC,EAAD,iB,GA9HbO,a,MCPlB0G,IAASD,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJE,SAASC,eAAe,Y","file":"static/js/main.f25f65ee.chunk.js","sourcesContent":["import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n  setNote: () => {},\n  setFolder: () => {},\n  currentNote: null,\n  currentFolder: null,\n  fetchData: () =>{}\n})","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './FoldersItem.css';\nimport ApiContext from '../../ApiContext'\nimport PropTypes from 'prop-types';\n\nclass FolderItem extends Component {\n    static contextType = ApiContext;\n\n        checkFolder=()=>{\n            \n            if(this.context.currentFolder===null){\n                return <li className=\"folderButton\">\n                {this.props.folder.name}</li>\n            }\n            \n            else if(this.context.currentFolder !==null){\n                if(this.context.currentFolder.id === this.props.folder.id){\n                    return <li className=\"currentFolder folderButton\">\n                    {this.props.folder.name}\n                </li>\n                        \n                }\n            else{\n                return <li className=\"folderButton\">\n                {this.props.folder.name}\n            </li>\n\n            }\n\n        }\n\n        }\n\n    render(){\n\n        return(\n            <Link className=\"folderButtonLink\" to={`/folder/${this.props.folder.id}`} onClick={()=>{this.context.setFolder(this.props.folder)}}>\n                {this.checkFolder()}\n            </Link>\n        )\n        \n    }\n}\n\nFolderItem.propTypes = {\n    folder: PropTypes.object.isRequired\n}\n\n\nexport default FolderItem","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './AddFolder.css'\n\n\nclass AddFolderButton extends Component {\n    \n    render(){\n        return(\n            <Link to={`/AddFolder`} className=\"addFolderButton\">Add folder</Link>        \n        )\n    }\n}\n\nexport default AddFolderButton","import React, {Component} from 'react';\nimport './HomeSideBar.css'\nimport FolderItem from '../FolderItem/FolderItem'\nimport AddFolderButton from '../AddFolderButton/AddFolderButton'\nimport ApiContext from '../../ApiContext'\n\nclass HomeSideBar extends Component {\n    static contextType = ApiContext;\n    render(){\n        return(\n            <div className=\"sideBar\">\n                <ul className=\"folderButtonContainer\">\n                    {this.context.folders\n                        .map((folder,index)=>{\n                            return(\n                                <FolderItem folder={folder} key={index}/>\n                            )\n                        })}\n                </ul>\n                <AddFolderButton/>\n            </div>          \n        )\n    }\n}\n\nexport default HomeSideBar","export default {\n    API_ENDPOINT: 'https://young-meadow-57359.herokuapp.com/api'\n  }","import React, {Component} from 'react';\nimport ApiContext from '../../ApiContext'\nimport config from '../../config'\nimport {Link} from 'react-router-dom'\nimport './DeleteButton.css'\nimport PropTypes from 'prop-types';\n\n\nclass DeleteButton extends Component {\n    static contextType = ApiContext;\n    \n    render(){\n\n        function deleteNoteRequest(noteId, callback){\n            fetch(`${config.API_ENDPOINT}/notes/${noteId}`,{\n                method: 'DELETE',\n                headers: {\n                    'content-type':'application/json'\n                },\n            })\n            .then(res=>{\n                if(!res.ok){\n                    return res.json().then(error=>{\n                        throw error\n                    })\n                }\n                return res\n            })\n            .then(data=>{\n                callback(noteId)\n            })\n            .catch(error=>{\n                console.error(error)\n            })\n        }\n\n        return(\n            <ApiContext.Consumer>\n                {(context)=>(\n                    <Link to=\"/\"><button className=\"deleteButton\" onClick={()=>{deleteNoteRequest(this.props.noteId, context.deleteNote)}}>Delete Note</button></Link>\n                )}\n            </ApiContext.Consumer>\n        )\n    }\n}\n\nDeleteButton.propTypes = {\n    noteId: PropTypes.number.isRequired\n}\n\nexport default DeleteButton","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport DeleteButton from '../DeleteButton/DeleteButton'\nimport ApiContext from '../../ApiContext'\nimport './NoteItem.css'\nimport PropTypes from 'prop-types';\n\nclass NoteItem extends Component {\n    static contextType = ApiContext;\n    render(){\n        function makeDate (modified){\n            let d = new Date(modified)\n            let day= d.toDateString()\n            return(day)\n        }\n        \n        let date = makeDate(this.props.note.modified)\n        \n        return(<div className=\"noteItem\">\n            <div className=\"noteInfo\">\n                <Link className=\"noteName\" to={`/note/${this.props.note.id}`} onClick={()=>{this.context.setNote(this.props.note)}}>{this.props.note.name}</Link>\n                <p className=\"date\">Date modified on {date} </p>\n            </div>\n            <DeleteButton noteId = {this.props.note.id}/>\n        </div>)\n        \n    }\n}\n\nNoteItem.propTypes = {\n    note: PropTypes.object.isRequired\n}\n\n\nexport default NoteItem","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport './AddNoteButton.css'\n\nclass AddNoteButton extends Component {\n\n    render(){\n        return(\n            <Link to={`/AddNote`} className=\"addNoteLink\"><button className=\"addNoteButton\">Add note</button></Link> \n        )\n    }\n}\n\nexport default AddNoteButton","import React, {Component} from 'react';\nimport NoteItem from '../NoteItem/NoteItem'\nimport AddNoteButton from '../AddNoteButton/AddNoteButton';\nimport './HomeMain.css'\nimport ApiContext from '../../ApiContext'\n\n\nclass HomeMain extends Component {\n    static contextType = ApiContext;\n    render(){\n        return(<div className=\"main\">\n            {this.context.notes\n                .map((note,index)=>{\n                    return(<NoteItem note={note} key={index}/>)\n                })}\n            <AddNoteButton/>\n        </div>\n        )\n    }\n}\n\nexport default HomeMain","import React, {Component} from 'react'\n\nclass Error extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          hasError: false\n        };\n      }\n    \n      static getDerivedStateFromError(error) {\n        return { hasError: true };\n      }\n\n    render(){\n        if(this.state.hasError){\n          return(\n              <h2>Could not display your notes. Please try again later.</h2>\n          )\n      }\n      return this.props.children \n      }\n\n}\n\nexport default Error","import React, {Component} from 'react';\nimport './HomePage.css'\nimport HomeSideBar from '../HomeSideBar/HomeSideBar';\nimport HomeMain from '../HomeMain/HomeMain'\nimport Error from '../../Error.js'\n\n\nclass HomePage extends Component {\n    render(){\n        return(<Error>\n        <div className=\"contentContainer homePage\">\n                <HomeSideBar/>\n                <HomeMain/>\n            </div>\n            </Error>\n        )\n    }\n}\n\nexport default HomePage","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport './Header.css'\nimport ApiContext from '../../ApiContext'\n\nclass Header extends Component {\n    \n    static contextType = ApiContext;\n\n    render(){\n        return(\n            <ApiContext.Consumer>\n            {(context)=>(\n                        <header>\n                        <div></div> \n                        <Link to=\"/\" onClick={()=>{this.context.setFolder(null)}}>\n                            Noteful\n                        </Link>\n                    </header>\n            )}\n            </ApiContext.Consumer>\n            \n        )\n    }\n}\n\nexport default Header\n\n\n\n/*//empty div for styling purposes\n<header>\n<div></div> \n<Link to=\"/\" onClick={()=>{this.context.setFolder(null)}}>\n    Noteful\n</Link>\n</header>*/","import React, {Component} from 'react';\nimport NoteItem from '../NoteItem/NoteItem'\nimport AddNoteButton from '../AddNoteButton/AddNoteButton';\nimport ApiContext from '../../ApiContext'\nimport './FolderMain.css'\n\nclass FolderMain extends Component {\n    static contextType = ApiContext;\n    render(){\n        return(<div className=\"folderMain\"> \n            {this.context.notes\n                .map((note,index)=>{\n                    if (this.context.currentFolder.id===note.folderid){\n                        return(<NoteItem note={note} key={index}/>)\n                    }\n                })\n            }\n            <AddNoteButton/>\n        </div>\n        )\n    }\n}\n\nexport default FolderMain","import React, {Component} from 'react';\nimport HomeSideBar from '../HomeSideBar/HomeSideBar'\nimport FolderMain from '../FolderMain/FolderMain'\nimport ApiContext from '../../ApiContext'\nimport Error from '../../Error.js'\n\nclass FolderPage extends Component {\n    static contextType = ApiContext;\n        \n    //for refreshing\n        componentDidMount(){\n            if(!this.context.notes.length || !this.context.folders.length || !this.context.currentFolder){\n                this.context.fetchData()\n            }\n        }\n    \n        componentWillUpdate(nextprops){\n           console.log(nextprops)\n            if(!this.context.currentFolder){\n                       \n                const {props: {match}} = nextprops\n                const folder = this.context.folders.find(f =>\n                f.id === match.params.folderId)\n            \n            this.context.setFolder(folder)\n            }\n     \n        }\n    \n\n    render(){\n        if(!this.context.folders.length || !this.context.notes.length || !this.context.currentFolder){\n            return null\n        }\n        \n        return(<Error>\n            <div className=\"contentContainer folderPage\">\n                <HomeSideBar/>\n                <FolderMain/>\n            </div>\n        </Error>\n        )\n    }\n}\n\nexport default FolderPage","import React, {Component} from 'react';\nimport './BackButton.css'\nimport ApiContext from '../../ApiContext'\nimport {Link} from 'react-router-dom';\n\nclass BackButton extends Component {\n    static contextType = ApiContext;\n    \n    render(){\n\n        return(\n            <ApiContext.Consumer>\n                {(context)=>(\n                <Link to=\"/\" className=\"backButton\">Go back</Link> \n                )}\n            </ApiContext.Consumer>\n        )\n    }\n}\n\nexport default BackButton","import React, {Component} from 'react';\nimport ApiContext from '../../ApiContext'\nimport './NoteSideBar.css'\nimport BackButton from '../BackButton/BackButton'\n\nclass NoteSideBar extends Component {\n    static contextType = ApiContext;\n    render(){\n\n        let folder = this.context.folders.find((item)=>{\n            return item.id===this.context.currentNote.folderid\n        }) \n\n        let folderName = folder.name\n\n\n        return(<div className=\"sideBar noteSideBar\">\n            <BackButton/>\n            <p>{folderName}</p>\n        </div>          \n        )\n    }\n}\n\nexport default NoteSideBar","import React, {Component} from 'react';\nimport DeleteButton from '../DeleteButton/DeleteButton'\nimport ApiContext from '../../ApiContext'\n\n\nclass NotePageItem extends Component {\n    static contextType = ApiContext;\n    render(){\n\n        function makeDate (modified){\n            let d = new Date(modified)\n            let day= d.toDateString()\n            return(day)\n        }\n        \n        let date = makeDate(this.context.currentNote.modified)\n        \n        return(\n        <div className=\"noteItem\">\n            <div className=\"noteInfo\">\n                <p className=\"noteName\">{this.context.currentNote.name}</p>\n                <p className=\"date\">Date modified on {date} </p>\n            </div>\n            <DeleteButton noteId = {this.context.currentNote.id}/>\n        </div>)\n    }\n}\n\nexport default NotePageItem","import React, {Component} from 'react';\nimport ApiContext from '../../ApiContext'\nimport NotePageItem from '../NotePageItem/NotePageItem'\nimport './NoteMain.css'\n\nclass NoteMain extends Component {\n    static contextType = ApiContext;\n    \n    render(){\n\n        return(<div className=\"main\">\n            <NotePageItem/>\n            <p className=\"content\">{this.context.currentNote.content}</p>\n        </div>\n        )\n    }\n}\n\nexport default NoteMain","import React, {Component} from 'react';\nimport NoteSideBar from '../NoteSideBar/NoteSideBar';\nimport NoteMain from '../NoteMain/NoteMain'\nimport ApiContext from '../../ApiContext'\nimport Error from '../../Error.js'\n\n\nclass NotePage extends Component {\n    static contextType = ApiContext;\n    \n    //for refreshing\n    componentDidMount(){\n        if(!this.context.notes.length || !this.context.folders.length || !this.context.currentNote){\n            this.context.fetchData()\n        }\n    }\n\n    componentWillUpdate(nextprops){\n       \n\n        if(!this.context.currentNote){\n            const {props: {match}} = nextprops\n            const note = this.context.notes.find(n =>\n                n.id === match.params.noteId)\n                \n            this.context.setNote(note)\n        }\n \n    }\n\n    render(){\n\n        //for refreshing - wont return error on refresh\n        if(!this.context.notes.length || !this.context.folders.length || !this.context.currentNote){\n            return null\n        }\n        \n        return(<Error>\n        <div className=\"contentContainer\">\n           <NoteSideBar/>\n            <NoteMain/> \n        </div>\n        </Error>\n        )\n    }\n}\n\nexport default NotePage\n","import React from 'react';\n\nexport default function ValidationError(props) {\n  if(props.message) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    );\n  }\n\n  return <></>\n}","import React, {Component} from 'react'\nimport ValidationError from './ValidationError'\nimport ApiContext from '../../ApiContext'\nimport config from '../../config'\nimport {Link} from 'react-router-dom'\nimport BackButton from '../BackButton/BackButton'\nimport './AddFolder.css'\nimport Error from '../../Error.js'\n\n\nclass AddFolder extends Component{\n    static contextType = ApiContext;\n\n    validateFolderName(){\n        const folderName = this.state.folderName.value\n        if(folderName.length===0){\n            return 'Folder name is required.' \n        }\n    }\n\n    constructor(props){\n        super(props)\n        this.state={\n            folderName: {\n                value: '',\n                touched: false\n            }\n        }\n    }\n\n    updateFolderName(folderName){\n        this.setState({folderName: {value:folderName,touched:true}})\n    }\n\n    makeSubmitButton(){\n        if(this.validateFolderName()){\n            return <Link onClick={()=>{this.context.setFolder({})}} className=\"formSubmitLink\" to='/'><button  disabled={this.validateFolderName()} className=\"formSubmit disabled\" type=\"submit\" onClick={()=>this.addFolderRequest(this.state.folderName.value, this.context.addFolder)}>Submit</button></Link>\n        }\n        else{\n            return <Link onClick={()=>{this.context.setFolder({})}} className=\"formSubmitLink\" to='/'><button className=\"formSubmit notDisabled\" type=\"submit\" onClick={()=>this.addFolderRequest(this.state.folderName.value, this.context.addFolder)}>Submit</button></Link>\n        }\n    }\n\n    addFolderRequest(folderName, callback){\n        fetch(`${config.API_ENDPOINT}/folders`,{\n            method: 'POST',\n            headers: {\n                'content-type':'application/json',\n            },\n            body: JSON.stringify({\"name\":folderName})\n        })\n        .then(res=>{\n            if(!res.ok){\n                return res.json().then(error=>{\n                    throw error\n                })\n            }\n            return res.json()\n        })\n        .then(data=>{\n            callback(data)\n\n        })\n        .catch(error=>{\n            console.error(error)\n        })\n    }\n\n\n    render(){\n\n        return(\n            <ApiContext.Consumer>\n                {(context)=>(<Error>\n                <div className=\"contentContainer\">\n                    <div className=\"sideBar formSideBar\">\n                        <BackButton/>\n                    </div>\n                    <div className=\"main\">\n                        <form className=\"newFolder\">\n                            <p className=\"formTitle\">Create a New Folder</p>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"folderName\">Folder Name*</label>\n                                <input type=\"text\" name=\"folderName\" id=\"folderName\" onChange={e=>this.updateFolderName(e.target.value)}/>\n                                {this.state.folderName.touched && (<ValidationError message={this.validateFolderName()}/>)}\n                            </div>\n                            {this.makeSubmitButton()}    \n                        </form>\n                    </div>\n                    \n                </div>\n                </Error>\n                )}\n            </ApiContext.Consumer>\n            \n        )\n    }\n}\n\nexport default AddFolder\n\n","import React from 'react';\n\nexport default function ValidationError(props) {\n  if(props.message) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    );\n  }\n\n  return <></>\n}","import React, {Component} from 'react'\nimport ApiContext from '../../ApiContext'\nimport config from '../../config'\nimport {Link} from 'react-router-dom'\nimport ValidationError from './ValidationError'\nimport './AddNote.css'\nimport BackButton from '../BackButton/BackButton'\nimport Error from '../../Error.js'\n\n\nclass AddNote extends Component{\n    static contextType = ApiContext;\n\n    handleSubmit(e){\n        e.preventDefault()\n    }\n\n    makeDate (){\n        let d = new Date()\n        let day= d.toDateString()\n        return(day)\n    }\n\n    setDate(){\n        console.log('date')\n    }\n\n    validateNoteName(){\n        const name = this.state.noteName.value\n        if(name.length===0){\n            return 'Note name is required.'\n        }\n    }\n\n    updateNoteName(noteName){\n        this.setState({noteName: {value:noteName,touched:true}})\n    }\n\n    validateFolder(){\n        const folder = this.state.folder.value\n        if(folder===\"\"){\n            return 'Folder selection is required.' \n        }\n    }\n\n    updateFolder(folderName){\n        this.setState({folder: {value:folderName,touched:true}})\n    }\n\n    validateContent(){\n        const content = this.state.content.value\n        if(content.length===0){\n            return 'Content is required.' \n        }\n    }\n\n    updateContent(content){\n        this.setState({content: {value:content,touched:true}})\n    }\n\n    constructor(props){\n        super(props)\n        this.state={\n            noteName: {\n                value: '',\n                touched: false\n            },\n            folder: {\n                value: '',\n                touched:false\n            },\n            content: {\n                value: '',\n                touched:false,\n            },\n            date: ''\n        }\n    }\n\n\n    makeSubmitButton(){\n        if(this.validateNoteName() || this.validateFolder() || this.validateContent()){\n            return <Link onClick={()=>{this.context.setFolder({})}} className=\"formSubmitLink\" to=\"/\">\n                <button type=\"submit\" \n                    className=\"formSubmit disabled\" \n                    disabled={this.validateNoteName() || this.validateFolder() || this.validateContent() }\n                    onClick={()=>this.addNoteRequest(this.state.noteName.value,this.state.folder.value,this.state.content.value,this.context.addNote)} \n                >\n                    Submit\n                </button>\n            </Link>\n        }\n        else{\n            return <Link onClick={()=>{this.context.setFolder({})}} className=\"formSubmitLink\" to=\"/\"><button type=\"submit\" className=\"formSubmit notDisabled\" onClick={()=>this.addNoteRequest(this.state.noteName.value,this.state.folder.value,this.state.content.value,this.context.addNote)} >\n                Submit</button>\n            </Link>\n        }\n    }\n    \n\n        addNoteRequest(noteName,folderId,content,callback){\n            \n        function makeDate (){\n            let d = new Date()\n            let day= d.toDateString()\n            return(day)\n        }\n    \n        let date = makeDate()\n        \n    \n        fetch(`${config.API_ENDPOINT}/notes`,{\n            method: 'POST',\n            headers: {\n                'content-type':'application/json',\n            },\n            body: JSON.stringify({\"name\":noteName,\"folderid\":folderId,\"content\":content,\"modified\":date})\n        })\n        .then(res=>{\n            if(!res.ok){\n                return res.json().then(error=>{\n                    throw error\n                })\n            }\n            return res.json()\n        })\n        .then(data=>{\n            callback(data)\n        })\n        .catch(error=>{\n            console.error(error)\n        })\n    }\n    \n\n    render(){\n\n        return(\n            <ApiContext.Consumer>\n                {(context)=>(<Error>\n                    <div className=\"contentContainer\">\n                        <div className=\"sideBar formSideBar\">\n                            <BackButton/>\n                        </div>\n                        <div className=\"main\">\n                            <form className=\"newNote\">\n                                <p className=\"formTitle\">Create a New Note</p>\n                                <div className=\"form-group\" onSubmit={e=>this.handleSubmit(e)}>\n                                    <label htmlFor=\"noteName\">Note Name*</label>\n                                    <input type=\"text\" name=\"noteName\" id=\"noteName\" onChange={e=>this.updateNoteName(e.target.value)}/>\n                                    {this.state.noteName.touched && (<ValidationError message={this.validateNoteName()}/>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"folder\">Folder*</label>\n                                    <select name=\"folder\" id=\"folder\" onChange={e=>this.updateFolder(e.target.options[e.target.selectedIndex].value)}>\n                                        <option value=\"\">Select a folder</option>\n                                        {this.context.folders.map((folder,index)=>{\n                                            return <option value={folder.id} key={index}>{folder.name}</option>\n                                        })}\n                                    </select>\n                                    {this.state.folder.touched && (<ValidationError message={this.validateFolder()}/>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"content\">Content*</label>\n                                    <input type=\"text\" name=\"content\" id=\"content\" onChange={e=>this.updateContent(e.target.value)} />\n                                    {this.state.content.touched && (<ValidationError message={this.validateContent()}/>)}\n                                </div>\n                                {this.makeSubmitButton()}   \n                                \n                            </form>\n                        </div>\n                    </div>\n                    </Error>\n                )}\n            </ApiContext.Consumer>\n            \n        )\n    }\n}\n\nexport default AddNote\n\n","import React, {Component} from 'react';\nimport {Route,BrowserRouter} from 'react-router-dom'\nimport HomePage from './Composition/HomePage/HomePage'\nimport Header from './Composition/Header/Header'\nimport FolderPage from './Composition/FolderPage/FolderPage'\nimport NotePage from './Composition/NotePage/NotePage'\nimport './App.css'\nimport config from './config'\nimport ApiContext from './ApiContext';\nimport AddFolder from './Composition/AddFolder/AddFolder'\nimport AddNote from './Composition/AddNote/AddNote'\nimport Error from './Error'\n\nclass App extends Component {\n\n  state = {\n    notes:[],\n    folders:[],\n    currentNote: null,\n    currentFolder: null,\n    folderForm: {\n      value: null,\n      touched: false\n    }\n  }\n\n  deleteNote = (noteId) => {\n    const newNotes = this.state.notes.filter(note=>\n      note.id !== noteId\n    )\n    this.setState({\n      notes: newNotes,\n      currentFolder: null\n    })\n  }\n\n  setNote = (note) => {\n    this.setState({\n      currentNote: note\n    }\n    )\n  }\n\n  setFolder = (folder) => {\n    \n    this.setState({\n      currentFolder: folder\n    }\n    )\n  }\n\n  setFolderForm = (value) => {\n    this.setState(\n      {folderForm: \n        {value:value,\n        touched:true}\n      }\n    )\n  }\n\n  addFolder = (data) =>{\n    this.state.folders.push(data)\n    this.fetchData()\n  }\n\n  addNote= (data)=>{\n    this.state.notes.push(data)\n    this.fetchData()\n  }\n\n\n  fetchData = () => {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`),\n      fetch(`${config.API_ENDPOINT}/folders`)\n  ])\n      .then(([notesRes, foldersRes]) => {\n          if (!notesRes.ok)\n              return notesRes.json().then(e => Promise.reject(e));\n          if (!foldersRes.ok)\n              return foldersRes.json().then(e => Promise.reject(e));\n\n          return Promise.all([notesRes.json(), foldersRes.json()]);\n      })\n      .then(([notes, folders]) => {\n          this.setState({notes, folders});\n      })\n      .catch(error => {\n          console.error({error});\n      });\n\n  }\n\n  componentDidMount() {\n    this.fetchData()\n}\n\n\n  render(){\n    const value = {\n      notes:this.state.notes,\n      folders:this.state.folders,\n      currentNote:this.state.currentNote,\n      currentFolder:this.state.currentFolder,\n      setNote: this.setNote,\n      setFolder: this.setFolder,\n      fetchData: this.fetchData,\n      deleteNote:this.deleteNote,\n      addFolder:this.addFolder,\n      addNote:this.addNote\n    }\n    \n    return (\n     <ApiContext.Provider value={value}>\n        \n        <main className='App'>\n\n        <Error>\n          <Header/>\n          <div>\n           \n            <Route \n              exact path='/'\n              render={(props)=><HomePage/>}\n            />\n            <Route\n              path='/folder/:folderId'\n              render={(props)=><FolderPage props={props}/>}\n            />\n            <Route \n              path='/note/:noteId'\n              render={(props)=><NotePage props={props}/>}\n            />\n            <Route\n              path='/AddFolder'\n              render={(props)=><AddFolder/>}\n            />\n            <Route\n              path='/AddNote'\n              render={(props)=><AddNote/>}\n            />\n            \n        </div>\n       </Error>\n        </main>\n        \n      </ApiContext.Provider>\n    )\n  }\n\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}